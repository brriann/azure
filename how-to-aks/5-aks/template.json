{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location of AKS resource."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.7.7",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "networkPlugin": {
      "type": "string",
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      }
    },
    "maxPods": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Maximum number of pods that can run on a node."
      }
    },
    "enableRBAC": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off of RBAC."
      }
    },
    "vmssNodePool": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean flag to turn on and off of VM scale sets"
      }
    },
    "windowsProfile": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean flag to turn on and off of VM scale sets"
      }
    },
    "adminGroupObjectIDs": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "An array of AAD group object ids to give administrative access."
      }
    },
    "enablePrivateCluster": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable private network access to the Kubernetes cluster."
      }
    },
    "enableHttpApplicationRouting": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off http application routing."
      }
    },
    "enableOmsAgent": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off omsagent addon."
      }
    },
    "workspaceRegion": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "Specify the region for your OMS workspace."
      }
    },
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "Specify the name of the OMS workspace."
      }
    },
    "omsWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "Specify the resource id of the OMS workspace."
      }
    },
    "omsSku": {
      "type": "string",
      "defaultValue": "standalone",
      "allowedValues": [
        "free",
        "standalone",
        "pernode"
      ],
      "metadata": {
        "description": "Select the SKU for your workspace."
      }
    },
    "acrName": {
      "type": "string",
      "metadata": {
        "description": "Specify the name of the Azure Container Registry."
      }
    },
    "acrResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the container registry is associated with."
      }
    },
    "guidValue": {
      "type": "string",
      "metadata": {
        "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use the default value."
      },
      "defaultValue": "[newGuid()]"
    },
    "networkPolicy": {
      "type": "string",
      "metadata": {
        "description": "Network policy used for building Kubernetes network."
      }
    },
    "vnetSubnetID": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of virtual network subnet used for nodes and/or pods IP assignment."
      }
    },
    "serviceCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2020-03-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'WorkspaceDeployment-20200901185021')]"
      ],
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('location')]",
      "name": "[parameters('resourceName')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": 3,
            "vmSize": "Standard_DS2_v2",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "type": "VirtualMachineScaleSets",
            "mode": "System",
            "vnetSubnetID": "[parameters('vnetSubnetID')]"
          }
        ],
        "networkProfile": {
          "loadBalancerSku": "standard",
          "networkPlugin": "[parameters('networkPlugin')]",
          "networkPolicy": "[parameters('networkPolicy')]",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        },
        "aadProfile": {
          "managed": true,
          "adminGroupObjectIDs": "[parameters('adminGroupObjectIDs')]"
        },
        "apiServerAccessProfile": {
          "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
        },
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          },
          "omsagent": {
            "enabled": "[parameters('enableOmsAgent')]",
            "config": {
              "logAnalyticsWorkspaceResourceID": "[parameters('omsWorkspaceId')]"
            }
          }
        }
      },
      "tags": {},
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "SolutionDeployment-20200901185021",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[split(parameters('omsWorkspaceId'),'/')[4]]",
      "subscriptionId": "[split(parameters('omsWorkspaceId'),'/')[2]]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "apiVersion": "2015-11-01-preview",
              "type": "Microsoft.OperationsManagement/solutions",
              "location": "[parameters('workspaceRegion')]",
              "name": "[concat('ContainerInsights', '(', split(parameters('omsWorkspaceId'),'/')[8], ')')]",
              "properties": {
                "workspaceResourceId": "[parameters('omsWorkspaceId')]"
              },
              "plan": {
                "name": "[concat('ContainerInsights', '(', split(parameters('omsWorkspaceId'),'/')[8], ')')]",
                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                "promotionCode": "",
                "publisher": "Microsoft"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'WorkspaceDeployment-20200901185021')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "WorkspaceDeployment-20200901185021",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[split(parameters('omsWorkspaceId'),'/')[4]]",
      "subscriptionId": "[split(parameters('omsWorkspaceId'),'/')[2]]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "apiVersion": "2015-11-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces",
              "location": "[parameters('workspaceRegion')]",
              "name": "[parameters('workspaceName')]",
              "properties": {
                "sku": {
                  "name": "[parameters('omsSku')]"
                }
              }
            }
          ]
        }
      }
    },
    {
      "name": "ConnectAKStoACR-530f3e3c-cc01-468d-92af-fd8869d5c067",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('acrResourceGroup')]",
      "dependsOn": [
        "[concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2018-09-01-preview",
              "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
              "name": "[concat(parameters('acrName'), '/Microsoft.Authorization/', parameters('guidValue'))]",
              "properties": {
                "principalId": "[reference(parameters('resourceName'), '2020-03-01').identityProfile.kubeletidentity.objectId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "scope": "[resourceId(parameters('acrResourceGroup'),'Microsoft.ContainerRegistry/registries/', parameters('acrName'))]"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ClusterMonitoringMetricPulisherRoleAssignmentDepl-20200901185021",
      "apiVersion": "2017-05-10",
      "resourceGroup": "dev-ne-rg-howtoaks",
      "subscriptionId": "your-subscription-id",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.ContainerService/managedClusters/providers/roleAssignments",
              "apiVersion": "2018-01-01-preview",
              "name": "dev-ne-aks-howtoaks/Microsoft.Authorization/20024009-e8c6-4e97-a033-b67bb5797237",
              "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                "principalId": "[reference(parameters('resourceName')).addonProfiles.omsagent.identity.objectId]",
                "scope": "/subscriptions/your-subscription-id/resourceGroups/dev-ne-rg-howtoaks/providers/Microsoft.ContainerService/managedClusters/dev-ne-aks-howtoaks"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "/subscriptions/your-subscription-id/resourceGroups/dev-ne-rg-howtoaks/providers/Microsoft.ContainerService/managedClusters/dev-ne-aks-howtoaks"
      ]
    }
  ]
}
